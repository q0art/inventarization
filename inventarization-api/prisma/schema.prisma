generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  //
  email        String  @unique
  passwordHash String  @map("password_hash")
  //
  tokens       Token[]

  @@map("users")
}

model Token {
  id           String   @id @default(uuid())
  //
  refreshToken String   @unique @map("refresh_token")
  userAgent    String   @map("user_agent")
  expiredAt    DateTime @map("expired_at")
  //
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  //
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

enum Grade {
  INTERN
  JUNIOR
  MIDDLE
  SENIOR
  LEAD
}

model Departament {
  id        String     @id @default(uuid())
  //
  name      String
  //
  employees Employee[]
  //
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("departaments")
}

model Employee {
  id            String      @id @default(uuid())
  //
  firstName     String      @map("first_name")
  lastName      String?     @map("last_name")
  middleName    String?     @map("middle_name")
  //
  dateOfBirth   DateTime    @map("date_of_birth")
  //
  grade         Grade?
  //
  skills        String?
  //
  workSpace     Workspace   @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId   String
  //
  departament   Departament @relation(fields: [departamentId], references: [id], onDelete: Cascade)
  departamentId String

  @@map("employees")
}

model Brand {
  id           String        @id @default(uuid())
  //
  name         String        @unique
  //
  cpus         Cpu[]
  gpus         Gpu[]
  rams         Ram[]
  ssds         Ssd[]
  motherboards Motherboard[]
  case         Case[]
  //
  Desktop      Desktop[]
  Laptop       Laptop[]
  Monitor      Monitor[]
  Keyboard     Keyboard[]
  Mouse        Mouse[]
  //
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("brands")
}

model Cpu {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  baseSpeed        Int       @map("base_speed")
  maxSpeed         Int       @map("max_speed")
  coreCound        Int       @map("core_cound")
  threadCound      Int       @map("thread_cound")
  l2Cache          Int       @map("l2_cache")
  l3Cache          Int       @map("l3_cache")
  ramType          String[]  @map("ram_type")
  maxRam           Int       @map("max_ram")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("cpus")
}

model Gpu {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  soket            String
  baseSpeed        Int       @map("base_speed")
  maxSpeed         Int       @map("max_speed")
  memorySize       Int       @map("memory_size")
  bitBus           Int       @map("bit_bus")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("gpus")
}

model Ram {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  ramType          String    @map("ram_type")
  memorySpeed      Int       @map("memory_speed")
  memorySize       Int       @map("memory_size")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("rams")
}

model Ssd {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  memorySize       Int       @map("memory_size")
  readSpeed        Int       @map("read_speed")
  writeSpeed       Int       @map("write_speed")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("ssds")
}

model Motherboard {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  soket            String
  maxRamSize       Int       @map("max_ram_size")
  maxRamSpeed      Int       @map("max_ram_speed")
  motherboardType  String    @map("motherboard_type")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("motherboards")
}

model Case {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  laptops          Laptop[]
  //
  model            String
  manufacturerCode String    @map("manufacturer_code")
  caseType         String    @map("case_type")
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("cases")
}

model Desktop {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  model            String?
  manufacturerCode String?     @map("manufacturer_code")
  //
  brand            Brand?      @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String?
  //
  cpu              Cpu         @relation(fields: [cpuId], references: [id], onDelete: Cascade)
  cpuId            String
  gpu              Gpu         @relation(fields: [gpuId], references: [id], onDelete: Cascade)
  gpuId            String
  ram              Ram         @relation(fields: [ramId], references: [id], onDelete: Cascade)
  ramId            String
  ssd              Ssd         @relation(fields: [ssdId], references: [id], onDelete: Cascade)
  ssdId            String
  motherboard      Motherboard @relation(fields: [motherboardId], references: [id], onDelete: Cascade)
  motherboardId    String
  case             Case        @relation(fields: [caseId], references: [id], onDelete: Cascade)
  caseId           String
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("desktops")
}

model Laptop {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  model            String
  manufacturerCode String      @map("manufacturer_code")
  //
  brand            Brand?      @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String?
  //
  cpu              Cpu         @relation(fields: [cpuId], references: [id], onDelete: Cascade)
  cpuId            String
  gpu              Gpu         @relation(fields: [gpuId], references: [id], onDelete: Cascade)
  gpuId            String
  ram              Ram         @relation(fields: [ramId], references: [id], onDelete: Cascade)
  ramId            String
  ssd              Ssd         @relation(fields: [ssdId], references: [id], onDelete: Cascade)
  ssdId            String
  motherboard      Motherboard @relation(fields: [motherboardId], references: [id], onDelete: Cascade)
  motherboardId    String
  case             Case        @relation(fields: [caseId], references: [id], onDelete: Cascade)
  caseId           String
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("laptops")
}

model Monitor {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  model            String
  manufacturerCode String      @map("manufacturer_code")
  maxDispensing    String      @map("max_dispensing")
  diagonal         Int
  refreshRate      Int         @map("refresh_rate")
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("monitors")
}

model Keyboard {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  model            String
  manufacturerCode String      @map("manufacturer_code")
  keyboardType     String      @map("keyboard_type")
  keycapProfile    String      @map("keycap_profile")
  keycapCound      Int         @map("keycap_count")
  switch           String
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("keyboards")
}

model Mouse {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  model            String
  manufacturerCode String      @map("manufacturer_code")
  rate             Int
  maxResolution    Int         @map("max_resolution")
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("mouses")
}

model Workspace {
  id         String     @id @default(uuid())
  //
  employees  Employee[]
  //
  desktop    Desktop?   @relation(fields: [desktopId], references: [id], onDelete: Cascade)
  desktopId  String?
  laptop     Laptop?    @relation(fields: [laptopId], references: [id], onDelete: Cascade)
  laptopId   String?
  keyboard   Keyboard   @relation(fields: [keyboardId], references: [id], onDelete: Cascade)
  keyboardId String
  mouse      Mouse      @relation(fields: [mouseId], references: [id], onDelete: Cascade)
  mouseId    String
  monitor    Monitor    @relation(fields: [monitorId], references: [id], onDelete: Cascade)
  monitorId  String
  //
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")

  @@map("workspaces")
}
