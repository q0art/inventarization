generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  //
  email        String  @unique
  passwordHash String  @map("password_hash")
  //
  tokens       Token[]

  @@map("users")
}

model Token {
  id           String   @id @default(uuid())
  //
  refreshToken String   @unique @map("refresh_token")
  userAgent    String   @map("user_agent")
  expiredAt    DateTime @map("expired_at")
  //
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  //
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

enum Grade {
  INTERN
  JUNIOR
  MIDDLE
  SENIOR
  LEAD
}

model Departament {
  id        String     @id @default(uuid())
  //
  name      String     @unique
  //
  employees Employee[]
  //
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("departaments")
}

model Employee {
  id            String      @id @default(uuid())
  //
  firstName     String      @map("first_name")
  lastName      String      @map("last_name")
  middleName    String      @map("middle_name")
  email         String      @unique
  //
  dateOfBirth   DateTime    @map("date_of_birth")
  //
  grade         Grade?
  //
  skills        String?     @db.Text
  //
  departament   Departament @relation(fields: [departamentId], references: [id], onDelete: Cascade)
  departamentId String
  workspace     Workspace   @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId   String
  //
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("employees")
}

model Workspace {
  id          String     @id @default(uuid())
  //
  employees   Employee[]
  //
  monitor     Monitor?   @relation(fields: [monitorId], references: [id], onDelete: Cascade)
  monitorId   String?
  desktop     Desktop?   @relation(fields: [desktopId], references: [id], onDelete: Cascade)
  desktopId   String?
  laptop      Laptop?    @relation(fields: [laptopId], references: [id], onDelete: Cascade)
  laptopId    String?
  mouse       Mouse?     @relation(fields: [mouseId], references: [id], onDelete: Cascade)
  mouseId     String?
  mousepad    Mousepad?  @relation(fields: [mousepadId], references: [id], onDelete: Cascade)
  mousepadId  String?
  keyboard    Keyboard?  @relation(fields: [keyboardId], references: [id], onDelete: Cascade)
  keyboardId  String?
  headphone   Headphone? @relation(fields: [headphoneId], references: [id], onDelete: Cascade)
  headphoneId String?
  //
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")

  @@map("workspaces")
}

model Brand {
  id           String        @id @default(uuid())
  //
  name         String        @unique
  //
  cpus         Cpu[]
  gpus         Gpu[]
  rams         Ram[]
  ssds         Ssd[]
  motherboards Motherboard[]
  cases        Case[]
  coolers      Cooler[]
  laptops      Laptop[]
  monitors     Monitor[]
  mouses       Mouse[]
  mousepads    Mousepad[]
  keyboards    Keyboard[]
  headphones   Headphone[]
  //
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("brands")
}

model Cpu {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("cpus")
}

model Gpu {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("gpus")
}

model Ram {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("rams")
}

model Ssd {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("ssds")
}

model Motherboard {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("motherboards")
}

model Case {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("cases")
}

model Cooler {
  id               String    @id @default(uuid())
  //
  desktops         Desktop[]
  //
  brand            Brand     @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String    @unique
  manufacturerCode String    @unique
  link             String    @unique
  //
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("coolers")
}

model Desktop {
  id            String       @id @default(uuid())
  //
  workspaces    Workspace[]
  //
  cpu           Cpu          @relation(fields: [cpuId], references: [id], onDelete: Cascade)
  cpuId         String
  gpu           Gpu          @relation(fields: [gpuId], references: [id], onDelete: Cascade)
  gpuId         String
  ram           Ram?         @relation(fields: [ramId], references: [id], onDelete: Cascade)
  ramId         String?
  ssd           Ssd?         @relation(fields: [ssdId], references: [id], onDelete: Cascade)
  ssdId         String?
  motherboard   Motherboard? @relation(fields: [motherboardId], references: [id], onDelete: Cascade)
  motherboardId String?
  case          Case?        @relation(fields: [caseId], references: [id], onDelete: Cascade)
  caseId        String?
  cooler        Cooler?      @relation(fields: [coolerId], references: [id], onDelete: Cascade)
  coolerId      String?
  //
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@map("desktops")
}

model Laptop {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("laptops")
}

model Monitor {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("monitors")
}

model Mouse {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("mouses")
}

model Mousepad {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("mousepads")
}

model Keyboard {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("keyboards")
}

model Headphone {
  id               String      @id @default(uuid())
  //
  workspaces       Workspace[]
  //
  brand            Brand       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  brandId          String
  //
  model            String      @unique
  manufacturerCode String      @unique
  link             String      @unique
  //
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @updatedAt @map("updated_at")

  @@map("headphones")
}
